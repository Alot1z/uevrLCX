    50→      - name: Upload build logs
    51→        if: always()
    52→        uses: actions/upload-artifact@v4
    53→        with:
    54→          name: build-logs
    55→          path: |
    56→            ${{github.workspace}}/build/*.log
    57→          if-no-files-found: ignore
name: Dev Release
on: [push, workflow_dispatch]
permissions:
  contents: write
env:
  BUILD_TYPE: Release
  GH_TOKEN: ${{ secrets.GITHUBTOKEN }}
jobs:
  dev-release:
    runs-on: windows-latest
    timeout-minutes: 90
    concurrency:
      group: dev-release-${{ github.ref }}
      cancel-in-progress: true
    strategy:
      matrix:
        target: [uevr]
    steps:
      - name: Checkout backend
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          token: ${{ secrets.UESDK_PULLER || secrets.GITHUBTOKEN || github.token }}
          submodules: recursive
          persist-credentials: false
          fetch-depth: 0

      - name: Configure CMake
        shell: pwsh
        run: |
          cmake -S $env:GITHUB_WORKSPACE -B "$env:GITHUB_WORKSPACE/build" -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=$env:BUILD_TYPE 2>&1 |
            Tee-Object -FilePath "$env:GITHUB_WORKSPACE/build/configure.log"

      - name: Build backend
        shell: pwsh
        run: |
          cmake --build "$env:GITHUB_WORKSPACE/build" --config $env:BUILD_TYPE --target ${{matrix.target}} 2>&1 |
            Tee-Object -FilePath "$env:GITHUB_WORKSPACE/build/backend.log"
          if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }

      - name: Build plugin nullifier
        shell: pwsh
        run: |
          cmake --build "$env:GITHUB_WORKSPACE/build" --config $env:BUILD_TYPE --target vr-plugin-nullifier 2>&1 |
            Tee-Object -FilePath "$env:GITHUB_WORKSPACE/build/plugin-nullifier.log"
          if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }

      - name: Build Lua API (shared DLL)
        shell: pwsh
        run: |
          cmake --build "$env:GITHUB_WORKSPACE/build" --config $env:BUILD_TYPE --target LuaVR 2>&1 |
            Tee-Object -FilePath "$env:GITHUB_WORKSPACE/build/luavr.log"
          if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }

      # Frontend build removed: local-only repository, no upstream dependencies

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.target}}
          path: |
            ${{github.workspace}}/build/bin/${{matrix.target}}/*
            ${{github.workspace}}/build/bin/vr-plugin-nullifier/UEVRPluginNullifier.dll
            ${{github.workspace}}/build/bin/LuaVR/LuaVR.dll
          if-no-files-found: error
          retention-days: 7

      - name: Compress artifacts
        run: |
          echo ${{github.sha}} > ${{github.workspace}}/revision.txt
          7z a ${{github.workspace}}/${{matrix.target}}.zip ${{github.workspace}}/build/bin/${{matrix.target}}/*
          7z a ${{github.workspace}}/${{matrix.target}}.zip ${{github.workspace}}/build/bin/vr-plugin-nullifier/UEVRPluginNullifier.dll
          7z a ${{github.workspace}}/${{matrix.target}}.zip ${{github.workspace}}/build/bin/LuaVR/LuaVR.dll
          7z a ${{github.workspace}}/${{matrix.target}}.zip ${{github.workspace}}/revision.txt

      - name: Hash zip
        run: |
          $ReleaseHash = Get-FileHash -Algorithm SHA256 ${{github.workspace}}/${{matrix.target}}.zip
          $ReleaseHash.Hash | Out-File -FilePath ${{github.workspace}}/${{matrix.target}}.zip.sha256

      - name: Set padded run number
        run: |
          $paddedRunNumber = "{0:D5}" -f ${{ github.run_number }}
          echo "RUN_NUMBER=$paddedRunNumber" >> $env:GITHUB_ENV
        shell: powershell

      - name: Create Release
        if: github.ref == 'refs/heads/master'
        uses: ncipollo/release-action@6c75be85e571768fa31b40abf38de58ba0397db5
        with:
          token: ${{ secrets.GITHUBTOKEN || github.token }}
          name: ${{format('uevrLCX Nightly {0} ({1})', env.RUN_NUMBER, github.sha)}}
          tag: ${{format('nightly-{0}-{1}', env.RUN_NUMBER, github.sha)}}
          artifacts: "${{github.workspace}}/${{matrix.target}}.zip,${{github.workspace}}/${{matrix.target}}.zip.sha256"
          makeLatest: true
          bodyFile: ${{github.workspace}}/nightly-body.md
